@model IEnumerable<InvBackend.Models.QrtRevModel>

<head>
    <link rel="stylesheet" href="~/css/all.min.css" />
    <link rel="stylesheet" href="~/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/text_selection.css" />
</head>

<div class="row">
    <!-- Pie & Bar chart -->
    <div class="col-6">
        <figure class="highcharts-figure">
            <div class="container" id="pie_chart"></div>
        </figure>

        <figure class="highcharts-figure">
            <div class="container" id="bar_chart"></div>
        </figure>
    </div>

    <!-- CRUD with MySQL-->
    <div class="col-6 mt-1 ">
        <div class="card">
            <div class="card-body">
                <form id="industryForm" action="/QrtRev/Details" method="GET">
                    <select name="industry" id="industrySelect" class="form-select">
                        <option value="" selected disabled>--請選擇產業</option>
                        <option value="水泥工業">水泥工業</option>
                        <option value="食品工業">食品工業</option>
                        <option value="塑膠工業">塑膠工業</option>
                        <option value="建材營造">建材營造</option>
                        <option value="汽車工業">汽車工業</option>
                        <option value="其他">其他</option>
                        <option value="紡織纖維">紡織纖維</option>
                        <option value="運動休閒">運動休閒</option>
                        <option value="電子零組件業">電子零組件業</option>
                        <option value="電機機械">電機機械</option>
                        <option value="電器電纜">電器電纜</option>
                        <option value="生技醫療業">生技醫療業</option>
                        <option value="化學工業">化學工業</option>
                        <option value="玻璃陶瓷">玻璃陶瓷</option>
                        <option value="造紙工業">造紙工業</option>
                        <option value="鋼鐵工業">鋼鐵工業</option>
                        <option value="居家生活">居家生活</option>
                        <option value="橡膠工業">橡膠工業</option>
                        <option value="航運業">航運業</option>
                        <option value="電腦及週邊設備業">電腦及週邊設備業</option>
                        <option value="半導體業">半導體業</option>
                        <option value="其他電子業">其他電子業</option>
                        <option value="通信網路業">通信網路業</option>
                        <option value="光電業">光電業</option>
                        <option value="電子通路業">電子通路業</option>
                        <option value="資訊服務業">資訊服務業</option>
                        <option value="貿易百貨">貿易百貨</option>
                        <option value="油電燃氣業">油電燃氣業</option>
                        <option value="觀光餐旅">觀光餐旅</option>
                        <option value="金融保險業">金融保險業</option>
                        <option value="數位雲端">數位雲端</option>
                        <option value="綠能環保">綠能環保</option>
                    </select>
                </form>
            </div>
        </div>
        <table class="table table-striped table-hover ">
            <thead>
                <tr>
                    <th>股票代碼</th>
                    <th>公司名稱</th>
                    <th>產業</th>
                    <th>EPS</th>
                    <th>營業收入</th>
                    <th>營業利益</th>
                    <th>營業外收入及支出</th>
                    <th>稅後淨利</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CompanyName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Industry)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Eps)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OperatingRev)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OperatingProfit)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NonOperating)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NetIncome)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script src="~/js/bootstrap.bundle.min.js"></script>
<script src="~/js/jquery-3-7-1-min.js"></script>

<script src="~/js/graphChart.js"></script>
<script src="~/js/pieChartMore.js"></script>
<script src="~/js/export_data.js"></script>
<script src="~/js/exporting.js"></script>
<script src="~/js/accessibilty.js"></script>
<script src="~/js/variwide.js"></script>

<script src="~/js/charts/pieFunc.js"></script>

<script>
    // Prepare data for charts
    const companyNames = [@Html.Raw(string.Join(",", Model.Select(item => $"'{item.CompanyName}'")))];
    const operatingRevData = [@Html.Raw(string.Join(",", Model.Select(item => item.OperatingRev)))];
    const operatingProfitData = [@Html.Raw(string.Join(",", Model.Select(item => item.OperatingProfit)))];
    const nonOperatingData = [@Html.Raw(string.Join(",", Model.Select(item => item.NonOperating)))];
    const epsData = [@Html.Raw(string.Join(",", Model.Select(item => item.Eps)))];
    const netIncomeData = [@Html.Raw(string.Join(",", Model.Select(item => item.NetIncome)))];

    // Calculate operating costs (revenue minus profit)
    const operatingCostData = operatingRevData.map((rev, index) => rev - operatingProfitData[index]);

    // Prepare data for variwide chart (combining EPS, company names, and net income)
    const barElts = companyNames.map((name, index) => {
        return {
            name: name,
            y: epsData[index],          // EPS value for y-axis
            z: netIncomeData[index],    // Net income for z-value (width)
            x: index                    // Position on x-axis
        };
    });

    $(document).ready(function() {
        try {
            // Initialize charts on page load
            pieChart();
            barChart();

            // Set up industry filter event handler
            $("#industrySelect").change(function() {
                const industryFiltered = $(this).val();
                // Submit the form when industry is selected
                $("#industryForm").submit();
            });
        } catch (error) {
            console.error("Error initializing charts:", error);
        }
    });
</script>

<script>
    function pieChart() {
        try {
            const chart = Highcharts.chart('pie_chart', {
                colors: ['#C0C0C0', '#FFD700', '#CD7F32'],
                chart: {
                    type: 'column',
                    inverted: true,
                    polar: true
                },
                title: {
                    text: '上市公司本季度營業分析',
                    align: 'left'
                },
                subtitle: {
                    text: 'Q2',
                    align: 'left'
                },
                tooltip: {
                    outside: true
                },
                pane: {
                    size: '85%',
                    innerSize: '20%',
                    endAngle: 270
                },
                xAxis: {
                    tickInterval: 1,
                    labels: {
                        align: 'right',
                        useHTML: true,
                        allowOverlap: true,
                        step: 1,
                        y: 3,
                        style: {
                            fontSize: '13px'
                        }
                    },
                    lineWidth: 0,
                    gridLineWidth: 0,
                    categories: companyNames
                },
                yAxis: {
                    lineWidth: 0,
                    tickInterval: 25,
                    reversedStacks: false,
                    endOnTick: true,
                    showLastLabel: true,
                    gridLineWidth: 0
                },
                plotOptions: {
                    column: {
                        stacking: 'normal',
                        borderWidth: 0,
                        pointPadding: 0,
                        groupPadding: 0.15,
                        borderRadius: '50%'
                    }
                },
                series: [
                    {
                        name: '營業成本+費用',
                        data: operatingCostData
                    },
                    {
                        name: '營業利益',
                        data: operatingProfitData
                    },
                    {
                        name: '營業外收入與支出',
                        data: nonOperatingData
                    }
                ]
            });
        } catch (error) {
            console.error("Error rendering pie chart:", error);
        }
    }

    // Variwide bar chart
    function barChart() {
        try {
            Highcharts.chart('bar_chart', {
                chart: {
                    type: 'variwide'
                },
                title: {
                    text: 'EPS 與 營業收入分額',
                    align: 'left'
                },
                subtitle: {
                    text: 'Q2'
                },
                xAxis: {
                    type: 'category',
                    categories: companyNames
                },
                caption: {
                    text: '<單位:千元>'
                },
                legend: {
                    enabled: false
                },
                series: [{
                    name: '公司名稱',
                    data: barElts,
                    dataLabels: {
                        enabled: true,
                        format: 'EPS:{point.y}'
                    },
                    tooltip: {
                        pointFormat: 'EPS: <b> {point.y}</b><br>' +
                        '稅前淨利: <b> {point.z} 千元</b><br>'
                    },
                    borderRadius: 3,
                    colorByPoint: true
                }]
            });
        } catch (error) {
            console.error("Error rendering bar chart:", error);
        }
    }
</script>